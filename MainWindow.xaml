<!-- 
- FILE          : MainWindow.xaml
- PROGRAMMER    : Gagana Hettiarachchige
- PROJECT       : Assignment Manager
- FIRST VERSION : 2023-12-17
- DESCRIPTION   :
-	Holds the markup of the main screen.
-->

<Window x:Class="AssignmentManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AssignmentManager"
        mc:Ignorable="d"
        Title="Assignment Manager" 
        Height="450" Width="850" 
        MinHeight="450" MinWidth="1000"
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
        >
    
    <!-- Shortcuts. -->
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.LocalEditShortcut}" 
                     Executed="LocalEditShortcut_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.DueDateEditShortcut}" 
                     Executed="DueDateEditShortcut_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.OnlineEditShortcut}" 
                     Executed="OnlineEditShortcut_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.SelectNewShortcut}" 
                     Executed="SelectNewShortcut_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.CycleUpShortcut}" 
                     Executed="CycleUpShortcut_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.CycleDownShortcut}" 
                     Executed="CycleDownShortcut_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.InsertUpdateShortcut}" 
                     Executed="InsertUpdateShortcut_Executed"/>
        <CommandBinding Command="{x:Static local:MainWindow.ClearDeleteShortCut}" 
                     Executed="ClearDeleteShortCut_Executed"/>
    </Window.CommandBindings>
    
    <!-- Theme. -->
    <Window.Resources>
        <SolidColorBrush Color="White" x:Key="Primary"></SolidColorBrush>
        <SolidColorBrush Color="Black" x:Key="Secondary"></SolidColorBrush>
        <SolidColorBrush Color="White" x:Key="Tertiary"></SolidColorBrush>

        <SolidColorBrush Color="#BAE301" x:Key="StrongAccent"></SolidColorBrush>
        <SolidColorBrush Color="#b6bf8e" x:Key="MediumAccent"></SolidColorBrush>
        <SolidColorBrush Color="#6d783d" x:Key="WeakAccent"></SolidColorBrush>
    </Window.Resources>
    
    <Grid>
        <!-- Defining the grid rows. -->
        <Grid.RowDefinitions>

            <!-- Header row. -->
            <RowDefinition Height="50"/>

            <!-- Insert Row. -->
            <RowDefinition Height="80"/>

            <!-- Table results Row. -->
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>

        <!-- Creating borders. -->
        <Border Grid.Row="0" BorderBrush="{DynamicResource Secondary}" Background="{DynamicResource Primary}" BorderThickness="1" />
        <Border Grid.Row="1" BorderBrush="{DynamicResource Secondary}" Background="{DynamicResource Primary}" BorderThickness="1" />
        <Border Grid.Row="2" BorderBrush="{DynamicResource Secondary}" Background="{DynamicResource Primary}" BorderThickness="1" />
        <Border Grid.Row="4" BorderBrush="{DynamicResource Secondary}" Background="{DynamicResource Primary}" BorderThickness="1" />



        <!-- Header row. -->

        <TextBlock Name="ClockTextBlock"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            
            Margin="10, 0, 0, 0"
            
            Grid.Row="0"
            
            FontSize="30"
            Foreground="{DynamicResource Secondary}"
            >
            December 16, 2023 12:00:00 AM
        </TextBlock>

        <TextBlock Name="GeneralInfoTextBlock"
            
            Grid.Row="0"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            
            Margin="350, 0, 0, 0"
            MaxWidth="300"
            
            FontSize="14"
            >
            General information over hovered objects.
        </TextBlock>

        
        
        
        
        <!-- Help button. -->
        <Button Name="SettingsButton"
            Grid.Row="0"
            Width="100"
            Height="30"
            
            HorizontalAlignment="Right"
            VerticalAlignment="Center" 
            Margin="0, 0, 120, 0"
            Background="{DynamicResource StrongAccent}"
            
            Click="SettingsButton_Click"
                
            ToolTip="Edit settings..."
            >
            More...
        </Button>
        <Button Name="HelpButton"
            Grid.Row="0"
            Width="100"
            Height="30"
            
            HorizontalAlignment="Right"
            VerticalAlignment="Center" 
            Margin="0, 0, 10, 0"
            Background="{DynamicResource StrongAccent}"
            
            Click="HelpButton_Click"
                
            ToolTip="Show help..."
            >
            Help
        </Button>









        <!-- Insert Row. -->

        <!-- Class name input section. -->
        <Label
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Margin="7, -35, 0, 0"
            
            Foreground="{DynamicResource Secondary}"
            >
            *Class:
        </Label>
        <TextBox Name="ClassTextBox"
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Margin="10, 0, 0, 0"
            
            Width="50"
            
            TextChanged="ClassTextBox_TextChanged"     
            
            ToolTip="Change assignment class name..."
            >

        </TextBox>

        <!-- Assignment name input section. -->
        <Label
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Margin="67, -35, 0, 0"
            
            Foreground="{DynamicResource Secondary}"
            >
            *Assignment:
        </Label>
        <TextBox Name="AssignmentTextBox"
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Margin="70, 0, 0, 0"
            
            Width="80"
            
            TextChanged="AssignmentTextBox_TextChanged"     
            
            ToolTip="Change assignment name..."
            >

        </TextBox>

        <!-- Weight input section. -->
        <Label
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Margin="157, -35, 0, 0"
            
            Foreground="{DynamicResource Secondary}"
            >
            *Weight:
        </Label>
        <TextBox Name="WeightTextBox"
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Margin="160, 0, 0, 0"
            
            Width="50"
                 
            TextChanged="WeightTextBox_TextChanged"
            
            ToolTip="Change assignment grade weight percentage..."
            >

        </TextBox>

        <!-- Assignment name input section. -->
        <Label
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Margin="217, -35, 0, 0"
            
            Foreground="{DynamicResource Secondary}"
            >
            *Due Date:
        </Label>
        <Button Name="DueDateButton"
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Margin="220, 0, 0, 0"
            Background="{DynamicResource StrongAccent}"
            
            Click="DueDateButton_Click"
                
            ToolTip="Change assignment due date..."
            >
            2023-12-16 12:00:00 AM
        </Button>

        <!-- Assignment status input section. -->
        <Label
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Top" 
            Margin="358,8,0,0"
            
            Foreground="{DynamicResource Secondary}"
            >
            *Status:
        </Label>
        <ComboBox Name="StatusComboBox"
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Width="100"
            
            Margin="365,0,0,0"
                  
            SelectionChanged="StatusComboBox_SelectionChanged"
                  
            ToolTip="Change status of completion..."
            >
        </ComboBox>

        <!-- Local resources input section. -->
        <Label
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Top" 
            Margin="471,8,0,0"
            
            Foreground="{DynamicResource Secondary}"
            >
            Local Resources:
        </Label>
        <Button Name="LocalResourcesButton"
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Width="88"
            Height="20"
            Background="{DynamicResource StrongAccent}"
            
            Margin="475,0,0,0" 
            Click="LocalResourcesButton_Click"
                
            ToolTip="Add or remove local resources..."
            >

        </Button>

        <!-- Online resources input section. -->
        <Label
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            
            Margin="571,8,0,0"
            
            Foreground="{DynamicResource Secondary}"
            >
            Online Resources:
        </Label>
        <Button Name="OnlineResourcesButton"
            Grid.Row="1"
            
            HorizontalAlignment="Left"
            VerticalAlignment="Center" 
            Width="95"
            Height="20"
            Background="{DynamicResource StrongAccent}"
                
                
            Margin="575,0,0,0" 
            Click="OnlineResourcesButton_Click"
                
            ToolTip="Add or remove online resources..."
            >

        </Button>


        <!-- Combo box to select different assignments. -->
        <ComboBox Name="AssignmentSelectComboBox"
            Grid.Row="1"
            
            HorizontalAlignment="Right"
            VerticalAlignment="Center"      
            
            Margin="0,0, 230,0" 
            
            SelectionChanged="AssignmentSelectComboBox_SelectionChanged"
            >
        </ComboBox>


        <!-- Button to insert/alter the assignment into the database. -->
        <Button Name="InsertUpdateButton"
            Grid.Row="1"
                
            HorizontalAlignment="Right"
            VerticalAlignment="Center" 
            
            Width="100"
            Height="30"
            Background="{DynamicResource StrongAccent}"
                
            
            Margin="0, 0, 120, 0" 
           
            Click="InsertUpdateButton_Click"
            
            FontSize="14"
            ToolTip="Insert/Update current assignment..."
            >
            Insert/Update
        </Button>

        <!-- Button to clear the selected assignment/alter the assignment in the database. -->
        <Button Name="ClearDeleteButton"
            Grid.Row="1"
                
            HorizontalAlignment="Right"
            VerticalAlignment="Center" 
            
            Width="100"
            Height="30"
            Background="{DynamicResource StrongAccent}"

            Click="ClearDeleteButton_Click"    
            
            Margin="0, 0, 10, 0" 
            
            FontSize="14"
            ToolTip="Clear/Delete current assignment..."
            >
            Clear/Delete
        </Button>


        <!-- Table results Row. -->

        <!-- Table to hold results. -->
        <DataGrid Name="TableGrid"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            
            HorizontalScrollBarVisibility="Visible"
            VerticalScrollBarVisibility="Visible"
            
            Grid.Row="2"
                  
            IsReadOnly="True"
                  
            AutoGenerateColumns="False"
            
            Background="{DynamicResource Tertiary}" 
            
            SelectionChanged="TableGrid_SelectionChanged"
            >
            <DataGrid.Resources>
                <!-- Colour of selected row. -->
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" 
                   Color="#0078D7"/>
            </DataGrid.Resources>
            <DataGrid.Columns>

                <!-- Assignment number . -->
                <DataGridTextColumn Header="No." Binding="{Binding AssignmentNumber}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <EventSetter Event="MouseEnter" Handler="Cell_MouseEnter"/>
                            <EventSetter Event="MouseLeave" Handler="Cell_MouseLeave"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                
                <!-- Class of assignment. -->
                <DataGridTextColumn Header="Class" Binding="{Binding ClassName}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <EventSetter Event="MouseEnter" Handler="Cell_MouseEnter"/>
                            <EventSetter Event="MouseLeave" Handler="Cell_MouseLeave"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- Assignment name. -->
                <DataGridTextColumn Header="Assignment" Binding="{Binding AssignmentName}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <EventSetter Event="MouseEnter" Handler="Cell_MouseEnter"/>
                            <EventSetter Event="MouseLeave" Handler="Cell_MouseLeave"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                
                <!-- Assignment weight. -->
                <DataGridTextColumn Header="Weight (%)" Binding="{Binding AssignmentWeight}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <EventSetter Event="MouseEnter" Handler="Cell_MouseEnter"/>
                            <EventSetter Event="MouseLeave" Handler="Cell_MouseLeave"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                
                <!-- Due date. -->
                <DataGridTextColumn Header="Due Date" Binding="{Binding DueDate}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <EventSetter Event="MouseEnter" Handler="DueDate_MouseEnter"/>
                            <EventSetter Event="MouseLeave" Handler="DueDate_MouseLeave"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                
                <!-- Assignment status. -->
                <DataGridTextColumn Header="Status" Binding="{Binding AssignmentStatus}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="Text" Value="Incomplete">
                                    <Setter Property="Background" Value="{DynamicResource WeakAccent}"/>
                                </Trigger>
                                <Trigger Property="Text" Value="In Progress">
                                    <Setter Property="Background" Value="{DynamicResource MediumAccent}"/>
                                </Trigger>
                                <Trigger Property="Text" Value="Complete">
                                    <Setter Property="Background" Value="{DynamicResource StrongAccent}"/>
                                </Trigger>
                            </Style.Triggers>
                            <EventSetter Event="MouseEnter" Handler="Cell_MouseEnter"/>
                            <EventSetter Event="MouseLeave" Handler="Cell_MouseLeave"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>



                <!-- Optional columns.-->
                <!-- Local Resources list. -->
                <DataGridTextColumn Header="Local Resources" Binding="{Binding LocalResources}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <EventSetter Event="MouseLeftButtonUp" Handler="Resources_MouseLeftButtonUp"/>
                            <EventSetter Event="MouseEnter" Handler="Resources_MouseEnter"/>
                            <EventSetter Event="MouseLeave" Handler="Resources_MouseLeave"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- Online Resources list. -->
                <DataGridTextColumn Header="Online Resources" Binding="{Binding OnlineResources}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <EventSetter Event="MouseLeftButtonUp" Handler="Resources_MouseLeftButtonUp"/>
                            <EventSetter Event="MouseEnter" Handler="Resources_MouseEnter"/>
                            <EventSetter Event="MouseLeave" Handler="Resources_MouseLeave"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>


            </DataGrid.Columns>
            
            
        </DataGrid>

        


    </Grid>
</Window>
